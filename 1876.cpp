/**
 * 1876. Утро сороконожки
 * Ограничение времени: 0.5 секунды
 * Ограничение памяти: 64 МБ
 * У сороконожки 40 левых ножек и 40 правых ножек.
 * Под кроватью у сороконожки a левых тапочек и b правых тапочек.
 * Сороконожка, просыпаясь, надевает тапочки.
 * Для этого она засовывает под кровать первую левую ножку и надевает
 * первый попавшийся тапочек, тратя на это одну секунду.
 * Если тапочек оказывается левым, то она переходит ко второй левой ножке.
 * Если же он оказывается правым, она переодевает его на какую-нибудь
 * необутую правую ножку, тратя ещё одну секунду, то есть всего на такой тапочек уходит две секунды.
 * Если все правые ножки уже обуты, то она снимает тапочек и кидает его в угол комнаты,
 * тратя на это одну секунду, то есть на такой тапочек сороконожка тратит также две секунды.
 * Процесс продолжается до тех пор, пока все левые ножки не окажутся в левых тапочках.
 * Затем сороконожка аналогичным образом начинает надевать правые тапочки,
 * продолжая до тех пор, пока не будут обуты все правые ножки.
 * Сегодня сороконожка встала не с той ножки, поэтому она готовится к худшему.
 * Несмотря на это, она, как обычно, начинает обуваться с левой ножки.
 * Сколько секунд понадобится сороконожке на утреннее обувание?
 * Исходные данные
 * В единственной строке записаны целые числа a и b (40 ≤ a, b ≤ 100).
 * Результат
 * Выведите, сколько секунд понадобится в худшем случае сороконожке на утреннее обувание.
 * 
 * Худшый результат, если правых больше (или равно)
 * обуваем полностью правую 40*2
 * оставшиеся правые выкидываем (b-40)*2
 * обуваем левую 40
 * 40 * 2 + (b - 40)*2 + 40
 * 120 + (b - 40)*2
 * 
 * Худшый результат, если левых больше
 * обуваем 39 правых 39*2
 * потом 40 левых
 * потом остальные левые (а - 40) * 2
 * и последнюю правую +1
 * 39 * 2 + 40 + (a - 40)*2 + 1
 * 119 + (a - 40)*2
 */
#include <iostream>
#include <algorithm>

int main()
{
    std::ios::sync_with_stdio(false);

    int a, b;
    std::cin >> a >> b;
    std::cout << std::max(120 + (b-40)*2, 119 + (a-40)*2) << std::endl;

}